{
  "ml_mode": {
    "default_value": "ml",
    "description": "Machine learning mode",
    "valid_values": ["ml", "fl", "bcfl"]
  },
  "model": {
    "default_value": "bert_tiny",
    "description": "Model to use for training",
    "valid_values": ["bert_tiny", "bert_mini", "bert_small", "bert_medium"]
  },
  "layers": {
    "default_value": 3,
    "description": "Number of the last encoding and classifier layers in the model that are trainable. Embeddings are frozen layers.",
    "valid_values": "Any valid positive integer from 1 to 4"
  },
  "dataset": {
    "default_value": "twitter_dep",
    "description": "Code name for dataset to use for training",
    "valid_values": ["twitter_dep", "acl_dep_sad", "dreaddit", "mixed_depression", "deptweet"]
  },
  "model_name": {
    "default_value": "bert_tiny",
    "description": "Name of the model to save",
    "valid_values": "Any valid string"
  },
  "models_path": {
    "default_value": "client/models/bert_tiny",
    "description": "Folder path to save the model",
    "valid_values": "Any valid path"
  },
  "max_length": {
    "default_value": 512,
    "description": "Maximum length of the input sequence",
    "valid_values": "Any valid positive integer"
  },
  "train_batch_size": {
    "default_value": 4,
    "description": "Batch size for training",
    "valid_values": [2, 4, 8, 16, 32, 64]
  },
  "eval_batch_size": {
    "default_value": 4,
    "description": "Batch size for evaluation",
    "valid_values": [2, 4, 8, 16, 32, 64]
  },
  "train_size": {
    "default_value": 0.8,
    "description": "Fraction of dataset to use for training",
    "valid_values": "Any valid float between 0 and 1"
  },
  "eval_size": {
    "default_value": 0.2,
    "description": "Fraction of dataset to use for evaluation",
    "valid_values": "Any valid float between 0 and 1"
  },
  "num_epochs": {
    "default_value": 3,
    "description": "Number of training epochs (per round in FL and BCFL)",
    "valid_values": "Any valid positive integer"
  },
  "learning_rate": {
    "default_value": 6e-4,
    "description": "Learning rate for training",
    "valid_values": "Any valid positive float"
  },
  "dp_epsilon": {
    "default_value": 0.0,
    "description": "Epsilon for differential privacy. 0 means no differential privacy",
    "valid_values": "Any valid positive float between 0 and 15"
  },
  "dp_delta": {
    "default_value": 3e-3,
    "description": "Delta for differential privacy. If epsilon is 0, delta is ignored",
    "valid_values": "Any small positive float between 1e-6 and 1e-2"
  },
  "seed": {
    "default_value": 200,
    "description": "Seed for random number generators",
    "valid_values": "Any valid positive integer"
  },
  "device": {
    "default_value": "cuda",
    "description": "Device to use for training",
    "valid_values": ["cpu", "cuda", "cuda:0", "cuda:1"]
  },
  "optimizer": {
    "default_value": "AdamW",
    "description": "Optimizer to use for training",
    "valid_values": ["AdamW"]
  },
  "scheduler": {
    "default_value": "linear",
    "description": "Scheduler to use for training",
    "valid_values": ["linear"]
  },
  "scheduler_warmup_steps": {
    "default_value": 0,
    "description": "Number of warmup steps for the scheduler",
    "valid_values": "Any valid positive integer"
  },
  "eval_flag": {
    "default_value": true,
    "description": "Flag to evaluate the model during training",
    "valid_values": [true, false]
  },
  "progress_bar_flag": {
    "default_value": false,
    "description": "Flag to show progress bar during training",
    "valid_values": [true, false]
  },
  "save_model": {
    "default_value": true,
    "description": "Flag to save model after training",
    "valid_values": [true, false]
  },
  "test_flag": {
    "default_value": false,
    "description": "Flag to test model after training with default configuration. Only enabled if save_model is true",
    "valid_values": [true, false]
  },
  "fed_alg": {
    "default_value": "fedavg",
    "description": "(Only with ml_mode == FL or BCFL) Federated learning algorithm",
    "valid_values": ["fedavg", "fedprox"]
  },
  "mu": {
    "default_value": 0.5,
    "description": "(Only with fed_alg == fedprox) Mu value for FedProx",
    "valid_values": "Any valid positive float between 0 and 10"
  },
  "num_rounds": {
    "default_value": 4,
    "description": "(Only with ml_mode == FL or BCFL) Number of rounds for federated learning",
    "valid_values": "Any valid positive integer"
  },
  "num_clients": {
    "default_value": 5,
    "description": "(Only with ml_mode == FL or BCFL) Number of clients for federated learning",
    "valid_values": "Any valid positive integer"
  },
  "data_distribution": {
    "default_value": "iid",
    "description": "(Only with ml_mode == FL or BCFL) Data distribution for federated learning",
    "valid_values": ["iid", "non_iid"]
  },
  "concurrency_flag": {
    "default_value": false,
    "description": "(Only with ml_mode == FL or BCFL) Flag to enable concurrency during federated learning",
    "valid_values": [true, false]
  }
}
